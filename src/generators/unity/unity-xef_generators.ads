------------------------------------------------------------------------------
--                                                                          --
--                         REFLEX COMPILER COMPONENTS                       --
--                                                                          --
--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --
--                                                                          --
-- Reflex is free software; you can redistribute it  and/or modify it under --
-- terms of the  GNU General Public Licensea as published  by the Free Soft- --
-- ware Foundation; either version 3, or (at your option) any later version --
-- Reflex is distributed in the hope that it will be useful, but WITH-      --
-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --
-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --
-- for  more details.  You should have  received  a copy of the GNU General --
-- Public License distributed with Reflex; see file COPYING3. If not, go to --
-- http://www.gnu.org/licenses for a complete copy of the license.          --
--                                                                          --
-- Reflex is originally developed  by the Artics team at Grenoble.          --
--                                                                          --
------------------------------------------------------------------------------


with Sax.Readers; use Sax.Readers;
with Sax.Exceptions;
with Sax.Readers;
with Sax.Locators;
with Sax.Attributes;
--with Sax.Models;
with Unicode.CES;

with Gnat.Os_Lib; use Gnat.Os_Lib;

with Artics.Strings_Stocks; use Artics.Strings_Stocks;
with Artics.Buffers; use Artics.Buffers;

with Unity.Gen; use Unity.Gen;

--  The xef file to import on the Unity platform is created with a xef template
--  file. The template file is parsed using a Sax driver. The handler of the 
--  Sax driver replaces the sections in the Xef template by the reflex
--  generated  code (Types, Dfb, Vars,..). Each section generated by reflex has
--  its own buffer. So the behavior is the following:
--    . if the section is not a section generated by reflex, copy the content
--      of template in the output xef file. 
--    . If the section is meaningfull to reflex, replace the section by the
--      corresponding reflex generated code.

--  For the time beeing, we does not care about consistence between the xef
--  template and the replacing reflex code. In a further, we need to found a 
--  solution to detect modifications done in the Unity platform are coherent
--  with reflex code.

package Unity.Xef_Generators is

   type Xef_Generator_Record is new Reader with private;
   type Xef_Generator_Ptr is access all Xef_Generator_Record;
   type Xef_Generator_Class_Ptr is access all Xef_Generator_Record'Class;
   
   function New_Xef_Generator return Xef_Generator_Ptr;
   
   function New_Xef_Generator
     (Generator : access Unity_Generator_Record;
      File_Name : String) return Xef_Generator_Ptr;
   function New_Xef_Generator
     (Generator : access Unity_Generator_Record;
      File_Name : Str_Id) return Xef_Generator_Ptr;
   --  Create a Sax reader for the unity generator This
   
   procedure Free_Xef_Generator (This : in out Xef_Generator_Ptr);
   --  Delete the Sax reader.
   
   procedure Generate_Xef (This : access Xef_Generator_Record);
   --  Start the generation of the Xef file
   
   function Get_Xef_File_Name
     (This : access Xef_Generator_Record) return String;
   function Get_Xef_File_Name_Id
     (This : access Xef_Generator_Record) return Str_Id;
   
   procedure Set_Xef_File_Name
     (This      : access Xef_Generator_Record;
      File_Name : String);
   procedure Set_Xef_File_Name_Id
     (This      : access Xef_Generator_Record;
      File_Name : Str_Id);
     
   function Get_Template_Xef_File_Name
     (This : access Xef_Generator_Record) return String;
   function Get_Template_Xef_File_Name_Id
     (This : access Xef_Generator_Record) return Str_Id;
   
   procedure Set_Template_Xef_File_Name
     (This      : access Xef_Generator_Record;
      File_Name : String);
   procedure Set_Template_Xef_File_Name_Id
     (This      : access Xef_Generator_Record;
      File_Name : Str_Id);
     
   function Get_Unity_Generator
     (This : access Xef_Generator_Record) return access Unity_Generator_Record;
   
   procedure Set_Unity_Generator
     (This : access Xef_Generator_Record;
      G    : access Unity_Generator_Record);
   
   -- Sax Callbacks --
   -------------------
   
   procedure Start_Prefix_Mapping
     (Handler : in out Xef_Generator_Record;
      Prefix  : Unicode.CES.Byte_Sequence;
      URI     : Unicode.CES.Byte_Sequence);

   procedure Characters
     (Handler : in out Xef_Generator_Record;
      Ch      : Unicode.CES.Byte_Sequence);

   procedure Ignorable_Whitespace
     (Handler : in out Xef_Generator_Record;
      Ch      : Unicode.CES.Byte_Sequence);

   procedure Processing_Instruction
     (Handler : in out Xef_Generator_Record;
      Target  : Unicode.CES.Byte_Sequence;
      Data    : Unicode.CES.Byte_Sequence);

   procedure Internal_Entity_Decl
     (Handler : in out Xef_Generator_Record;
      Name    : Unicode.CES.Byte_Sequence;
      Value   : Unicode.CES.Byte_Sequence);

   procedure Start_Element
     (Handler       : in out Xef_Generator_Record;
      Namespace_URI : Unicode.CES.Byte_Sequence := "";
      Local_Name    : Unicode.CES.Byte_Sequence := "";
      Qname         : Unicode.CES.Byte_Sequence := "";
      Atts          : Sax.Attributes.Attributes'Class);

   procedure End_Element
     (Handler       : in out Xef_Generator_Record;
      Namespace_URI : Unicode.CES.Byte_Sequence := "";
      Local_Name    : Unicode.CES.Byte_Sequence := "";
      Qname         : Unicode.CES.Byte_Sequence := "");
   
   procedure Generate_Task
     (Handler : in out Xef_Generator_Record;
      Atts    : in Sax.Attributes.Attributes'Class;
      Opening : in Boolean);

   procedure Generate_Header_Comment
     (Handler : in out Xef_Generator_Record;
      Opening : in Boolean);

   procedure Generate_Types (Handler : in out Xef_Generator_Record);

   procedure Generate_DFB (Handler : in out Xef_Generator_Record);

   procedure Generate_Datablock (Handler : in out Xef_Generator_Record);
   
   procedure Generate_Functional (Handler : in out Xef_Generator_Record);

   procedure Generate_Section (Handler : in out Xef_Generator_Record);

   procedure Generate_Sr (Handler : in out Xef_Generator_Record);
   
   procedure Generate_Program (Handler : in out Xef_Generator_Record);

   procedure Generate_Settings (Handler : in out Xef_Generator_Record);
   
private

   type Xef_Generator_Record is new Reader with record
      Ob : Output_Buffer;
      --  Temporary Buffer holding the portion of the template not meaningfull 
      --  for Reflex. It is directly append to the output file without any
      --  check. This buffer runs with the Flag Flush, when Flush is true 
      --  the content of the buffer is flushes. When a portion of the template
      --  is replaced by reflex, the flag is to false to avoid the flushing.
      
      Level : Natural;
      
      Flush : Boolean;
      --  See comment of Ob hereabove
      
      Unity_Generator : access Unity_Generator_Record;
      --  The unity genrator holding the buffers of the different parts of the
      --  program (DFB, Types, Vars ..)
      
      Xef_File_Name : Str_Id;
      Xef_File_Descriptor : File_Descriptor;
      --  Name of the Xef file to generate
      
      Template_Xef_File_Name : Str_Id;
      --  Name of the Xef template file 
      
      --  These flags for the Xef generation steps. True when the generation
      --  is done. 
      
      Task_Flag       : Boolean;
      Header_Flag     : Boolean;
      Types_Flag      : Boolean;
      Dfb_Flag        : Boolean;
      Datablock_Flag  : Boolean;
      Section_Flag    : Boolean;
      Sr_Flag         : Boolean;
      Functional_Flag : Boolean;
      Program_Flag    : Boolean;
      Settings_Flag   : Boolean;
   end record;

end Unity.Xef_Generators;
